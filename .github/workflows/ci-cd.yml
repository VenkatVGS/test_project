name: CI/CD Pipeline

on:
  push:
    branches: [ master, feature/iac ]
  pull_request:
    branches: [ master ]

env:
  AWS_REGION: ap-south-1
  ECR_REGISTRY: 418564622463.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPOSITORY: idurar-erp-hello-world
  EKS_CLUSTER_NAME: idurar-erp-cluster
  K8S_NAMESPACE: default

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd hello-world-service
        pip install -r requirements.txt
    
    - name: Lint Python
      run: |
        cd hello-world-service
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run Python tests
      run: |
        cd hello-world-service
        pip install pytest
        pytest test_app.py -v
    
    - name: Validate Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
      run: |
        cd terraform
        terraform fmt -check
        terraform validate

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature/iac'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd hello-world-service
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
    
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
    
    - name: Deploy to EKS
      run: |
        cd helm-charts/hello-world
        helm upgrade --install hello-world . \
          --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
          --set image.tag=${{ github.sha }} \
          --namespace $K8S_NAMESPACE \
          --atomic \
          --timeout 5m
    
    - name: Verify deployment
      run: |
        kubectl get pods -n $K8S_NAMESPACE -l app=hello-world
        kubectl get services -n $K8S_NAMESPACE hello-world


